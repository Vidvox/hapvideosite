<% page_name = 'benchmarks' %>

<%- include('partials/doc_top'); %>
<%- include('partials/nav'); %>

<header class="cool-header">
  <h1>Benchmarks</h1>
  <span class="subheading">Numbers, charts, and words to help you make choices</span>
</header>

<section class="centered-block">
  <p>Within the lifetime of a video production the actual media files being used often pass between several different formats that are best suited for the task at hand. For event production, digital signage, film production and other areas where HD and ultra high resolution video is being used, three of the most commonly used compression formats are H.264, ProRes and HAP.</p>
  <p>Each of these codecs is optimized for a different task:</p>
  <ul>
    <li>
      <img src="./images/benchmarks/hap.svg" class="benchmark-logo" width="119">
      <strong>HAP</strong>
      <p>Optimized for real-time playback, low to good quality, optional alpha channel, medium to large file sizes. Best for smooth playback of HD and ultra-high resolution video files (4k and larger) and to reduce file size when an alpha channel is needed.</p>
    </li>
    <li>
      <img src="./images/benchmarks/h264.svg" class="benchmark-logo" width="92">
      <strong>H.264</strong>
      <p>Smallest file size, low to good quality, fewest number of concurrent movies, maximum specification resolution of 4k. Best for backup, basic playback, mobile device recording, streaming and other low bandwidth situations.</p>
    </li>
    <li>
      <img src="./images/benchmarks/prores.svg" class="benchmark-logo" width="113">
      <strong>ProRes 422/4444</strong>
      <p>Very good quality, optional alpha channel, medium to large file sizes. Best for video editing, archiving and basic high quality playback.</p>
    </li>
  </ul>
</section>

<section class="centered-block divider-top">
  <h2>Codec Benchmarks</h2>
  <p>Typically every video encoding is a trade-off between the amount of disk access needed to read the file, the amount of work that your computer needs to do to decode the file and how close each frame is to its original pixel data. Some formats are optimized to be very small so that they can be used for streaming or download, sacrificing quality or performance. When archiving video a preference may be given to high quality or lossless codecs. For event production often the goal is to have the smoothest playback at the highest possible resolutions or the ability to mix between several pieces of media in real-time, even if it means larger file sizes and loss in quality.</p>
  <p>The file size and corresponding amount of CPU usage required to work with media files often varies heavily depending on the complexity of the encoded imagery. For these benchmarks we've compared two extreme cases, a completely blank video file and a file of complete noise, along with an average value computed by comparing a variety of different reference movies to give an idea of the expected data-rate ranges and performance.</p>
</section>

<section class="two-column even divider-top">
  <div class="text">
    <h3>Performance</h3>
    <p>While H.264 and ProRes are fine for basic media playback, the HAP codecs were designed for the situations that call for working with multiple layers of HD movies and larger ultra-HD resolutions. When using HAP most of the work for decoding the video frames during movie playback is handled by system graphics card, freeing up the CPU to perform other tasks.</p>
  </div>
  <div>
    <div id="benchmarks-performance"></div>
  </div>
</section>

<section class="two-column even divider-top">
  <div class="text">
    <h3>File size</h3>
    <p>On average file sizes for HAP and HAP Q are often comparable to ProRes 422 â€“ sometimes they will be bigger, sometimes smaller. For situations where an alpha channel is needed the HAP Alpha and HAP Q Alpha codecs can provide significant savings over ProRes 4444.</p>
  </div>
  <div>
    <div id="benchmarks-filesize"></div>
  </div>
</section>

<%- include('partials/footer'); %>
<%- include('partials/doc_bottom'); %>
